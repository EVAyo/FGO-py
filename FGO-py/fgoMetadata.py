classRestistance=[ # [Archer][Saber]=2
[1.0,0.5,2.0,1.0,1.0,1.0,1.0,2.0,0.5,1.0,1.0,1.0,1.0,1.0],
[2.0,1.0,0.5,1.0,1.0,1.0,1.0,2.0,0.5,1.0,1.0,1.0,1.0,1.0],
[0.5,2.0,1.0,1.0,1.0,1.0,1.0,2.0,0.5,1.0,1.0,1.0,1.0,1.0],
[1.0,1.0,1.0,1.0,2.0,0.5,1.0,2.0,0.5,1.0,1.0,1.0,1.0,1.0],
[1.0,1.0,1.0,0.5,1.0,2.0,1.0,2.0,0.5,1.0,1.0,1.0,1.0,1.0],
[1.0,1.0,1.0,2.0,0.5,1.0,1.0,2.0,0.5,1.0,1.0,1.0,1.0,1.0],
[1.5,1.5,1.5,1.5,1.5,1.5,1.0,1.5,1.5,1.5,1.5,1.5,0.5,1.5],
[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0],
[1.0,1.0,1.0,1.0,1.0,1.0,1.0,2.0,1.0,0.5,1.0,2.0,1.0,1.0],
[1.0,1.0,1.0,1.0,1.0,1.0,1.0,2.0,2.0,1.0,1.0,0.5,1.0,1.0],
[0.5,0.5,0.5,1.5,1.5,1.5,1.0,2.0,1.0,1.0,1.0,1.0,2.0,0.5],
[1.0,1.0,1.0,1.0,1.0,1.0,1.0,2.0,0.5,2.0,1.0,1.0,1.0,1.0],
[1.0,1.0,1.0,1.0,1.0,1.0,1.0,2.0,1.0,1.0,0.5,1.0,2.0,2.0],
[1.5,1.5,1.5,0.5,0.5,0.5,1.0,2.0,1.0,1.0,2.0,1.0,0.5,1.0],
]
classCorrection=[ # 攻击补正 集星权 掉星率
[1.0,100,10/100],
[0.95,150,8/100],
[1.05,90,12/100],
[1.0,200,9/100],
[0.9,50,11/100],
[0.9,100,25/100],
[1.1,10,5/100],
[1.0,100,10/100],
[1.1,100,10/100],
[1.1,30,6/100],
[1.0,100,10/100],
[1.0,50,15/100],
[1.0,150,15/100],
[1.0,100,20/100],
]
talentResisting=[ # 三才者,天地人,「才」译作talent
[1.0,1.1,0.9,1.0,1.0],
[0.9,1.0,1.1,1.0,1.0],
[1.1,0.9,1.0,1.0,1.0],
[1.0,1.0,1.0,1.0,1.1],
[1.0,1.0,1.0,1.1,1.0],
]
servantData={
# no houguColor houguType  rank     class         card   talent
#    0 Arts     0 targeted 0 gold    0 Saber      1 3Q   0 sky
#    1 Quick    1 area     1 silver  1 Archer     2 2Q2B 1 land
#    2 Buster   2 support  2 bronze  2 Lancer     3 2Q2A 2 human
#                                    3 Rider      4 3B   3 star
# The following are not included     4 Caster     6 2A2B 4 beast
#  83 Solomon                        5 Assassin   7 3A
# 149 Tiamat                         6 Berserker
# 151 Goetia                         7 Shielder
# 152 Solomon                        8 Ruler
# 168 BeastIII/R                     9 Avenger
# 240 BeastIII/L                    10 Alterego
# 333 BeastIV                       11 MoonCancer
#                                   12 Foreigner
#                                   13 Pretender
1:(0,2,0,7,6,1),
2:(2,1,0,0,6,1),
3:(2,1,0,0,6,2),
4:(2,1,0,0,6,1),
5:(0,1,0,0,6,2),
6:(2,1,0,0,6,1),
7:(1,0,1,0,2,2),
8:(2,1,0,0,6,2),
9:(0,2,1,0,6,2),
10:(0,2,0,0,6,2),
11:(2,1,0,1,7,2),
12:(2,1,0,1,6,0),
13:(0,0,1,1,3,2),
14:(1,1,0,1,3,1),
15:(0,0,1,1,3,0),
16:(2,1,2,1,6,1),
17:(1,0,1,2,2,0),
18:(2,1,0,2,2,2),
19:(0,2,2,2,3,2),
20:(1,0,1,2,2,0),
21:(2,2,2,2,2,2),
22:(2,1,1,2,2,3),
23:(1,1,1,3,3,1),
24:(0,0,2,3,3,2),
25:(2,1,2,3,6,2),
26:(0,2,1,3,3,2),
27:(1,0,1,3,3,2),
28:(1,1,1,3,3,2),
29:(1,1,0,3,3,2),
30:(2,1,0,3,7,2),
31:(0,0,1,4,7,1),
32:(2,1,1,4,7,2),
33:(0,2,2,4,7,2),
34:(2,1,2,4,7,2),
35:(2,1,1,4,7,1),
36:(0,2,2,4,7,3),
37:(0,2,0,4,7,2),
38:(2,1,1,4,7,0),
39:(1,0,2,5,1,2),
40:(1,0,2,5,1,2),
41:(2,2,0,5,1,0),
42:(1,0,1,5,1,2),
43:(2,0,2,5,1,2),
44:(0,1,2,5,1,1),
45:(0,2,2,5,1,2),
46:(2,0,0,5,1,1),
47:(2,0,0,6,4,0),
48:(1,1,0,6,4,1),
49:(2,0,1,6,4,2),
50:(2,1,2,6,4,2),
51:(2,0,0,6,4,2),
52:(0,0,0,6,6,1),
53:(0,2,2,6,4,1),
54:(0,2,2,6,4,2),
55:(2,1,1,6,4,2),
56:(2,1,1,6,4,1),
57:(2,1,2,6,4,2),
58:(1,1,0,6,4,1),
59:(0,2,0,8,7,3),
60:(0,0,0,1,3,0),
61:(2,1,0,4,7,2),
62:(0,2,0,4,7,0),
63:(2,0,1,1,7,0),
64:(2,1,1,2,2,2),
65:(2,1,0,3,6,3),
66:(1,0,0,3,3,2),
67:(0,2,0,4,7,1),
68:(1,0,0,0,2,2),
69:(2,1,0,1,6,2),
70:(1,0,0,2,2,3),
71:(1,0,1,2,3,1),
72:(2,1,1,0,4,1),
73:(2,1,0,3,6,2),
74:(0,1,0,4,7,2),
75:(1,0,0,5,1,1),
76:(2,1,0,0,6,1),
77:(2,1,0,1,6,3),
78:(2,1,0,2,2,0),
79:(0,1,1,4,7,2),
80:(2,1,1,4,6,2),
81:(2,2,1,5,2,1),
82:(1,1,0,6,4,1),
84:(2,1,0,1,7,0),
85:(2,1,0,2,2,0),
86:(1,0,0,5,3,3),
87:(0,1,0,2,3,0),
88:(2,0,0,2,2,0),
89:(2,0,0,6,4,1),
90:(0,0,0,0,6,2),
91:(0,1,0,0,6,2),
92:(0,0,0,5,3,2),
93:(2,1,0,8,6,2),
94:(1,1,0,3,1,1),
95:(2,1,1,1,6,0),
96:(1,1,0,9,2,2),
97:(0,2,0,6,6,2),
98:(2,0,0,6,4,1),
99:(2,0,0,3,6,1),
100:(0,1,0,4,7,2),
101:(2,0,0,0,6,0),
102:(0,0,0,2,3,2),
103:(0,1,0,4,7,2),
104:(0,1,1,4,6,2),
105:(1,0,1,1,3,2),
106:(2,0,0,9,6,2),
107:(0,2,0,9,3,2),
108:(2,1,0,3,6,2),
109:(0,0,0,5,3,2),
110:(0,0,1,5,3,2),
111:(0,2,0,4,7,0),
112:(0,1,0,5,3,1),
113:(2,0,0,4,7,2),
114:(2,1,0,6,6,0),
115:(1,0,0,3,2,1),
116:(2,0,0,6,4,1),
117:(1,1,1,5,1,2),
118:(2,0,0,3,6,0),
119:(2,1,0,2,2,0),
120:(0,1,0,4,7,1),
121:(0,0,0,0,6,1),
122:(1,0,0,1,3,1),
123:(2,1,0,0,4,1),
124:(0,0,1,5,3,2),
125:(2,1,1,1,6,2),
126:(2,0,1,0,2,3),
127:(0,1,0,4,7,3),
128:(2,0,0,2,2,0),
129:(0,0,0,1,3,1),
130:(0,1,0,4,7,2),
131:(2,0,0,1,6,2),
132:(0,1,0,3,3,1),
133:(1,1,0,5,1,3),
134:(2,0,0,2,2,1),
135:(2,0,0,8,4,2),
136:(2,0,0,4,7,2),
137:(0,0,0,1,3,0),
138:(2,0,0,0,6,1),
139:(2,1,0,5,2,2),
140:(2,0,0,2,2,2),
141:(2,1,0,2,2,2),
142:(2,1,0,1,6,0),
143:(2,0,0,2,1,0),
144:(2,0,0,3,6,0),
145:(0,1,0,4,7,2),
146:(1,0,0,2,3,1),
147:(2,1,0,9,6,1),
148:(2,0,1,2,2,1),
150:(0,2,0,4,7,1),
153:(2,0,0,0,4,2),
154:(2,0,0,5,4,2),
155:(1,0,0,6,2,3),
156:(2,0,0,1,7,2),
157:(0,0,0,1,3,2),
158:(1,0,0,9,3,1),
159:(1,0,0,5,1,2),
160:(2,1,0,0,6,1),
161:(2,0,0,6,2,2),
162:(2,1,0,6,4,2),
163:(1,0,0,10,2,1),
164:(2,1,0,10,4,1),
165:(2,1,0,0,6,0),
166:(0,0,0,11,3,2),
167:(0,1,0,10,6,4),
169:(0,1,0,4,7,2),
170:(1,0,0,5,2,2),
171:(2,0,0,6,4,1),
172:(2,1,1,3,6,2),
173:(0,2,0,8,3,3),
174:(2,1,2,6,4,1),
175:(2,1,0,4,6,2),
176:(1,0,0,0,2,1),
177:(0,1,0,5,3,0),
178:(2,0,0,6,4,2),
179:(1,0,0,3,3,2),
180:(0,1,0,1,3,2),
181:(2,0,0,2,2,0),
182:(1,1,0,3,3,0),
183:(1,1,0,2,2,0),
184:(2,0,0,1,6,1),
185:(0,0,0,5,3,1),
186:(0,2,1,2,1,2),
187:(0,0,0,0,6,2),
188:(2,1,0,5,2,1),
189:(1,2,0,5,3,1),
190:(2,0,0,10,4,2),
191:(2,0,0,10,4,2),
192:(2,0,0,4,7,0),
193:(2,1,0,2,2,0),
194:(0,0,0,4,6,2),
195:(2,0,0,12,7,1),
196:(2,1,0,2,2,1),
197:(1,0,0,1,3,3),
198:(0,1,0,12,6,2),
199:(2,1,0,5,7,1),
200:(2,0,0,1,6,2),
201:(0,1,0,4,7,2),
202:(1,0,0,6,2,1),
203:(2,1,1,4,7,2),
204:(0,1,1,9,6,1),
205:(2,1,0,3,6,2),
206:(1,1,0,3,3,1),
207:(0,0,0,1,3,0),
208:(0,1,0,4,6,2),
209:(2,1,0,10,2,2),
210:(0,0,1,5,3,2),
211:(0,0,0,3,6,2),
212:(2,1,0,1,6,3),
213:(2,0,0,0,6,1),
214:(1,1,0,2,2,0),
215:(0,2,0,4,3,0),
216:(0,1,0,1,6,2),
217:(2,0,0,2,2,1),
218:(1,1,0,5,1,2),
219:(2,0,0,6,4,2),
220:(2,1,0,11,6,1),
221:(0,0,0,0,6,1),
222:(0,0,0,12,6,3),
223:(1,0,0,0,2,1),
224:(0,0,0,10,6,0),
225:(2,0,0,4,7,1),
226:(1,1,0,6,4,2),
227:(0,2,0,0,6,2),
228:(0,2,0,2,3,2),
229:(0,2,0,8,6,2),
230:(2,1,0,5,2,1),
231:(1,1,1,3,3,1),
232:(1,1,0,2,3,1),
233:(2,1,0,8,2,0),
234:(0,0,0,0,6,1),
235:(0,0,0,5,6,2),
236:(0,2,0,4,7,2),
237:(0,1,0,4,3,2),
238:(2,1,0,10,6,1),
239:(1,0,0,5,2,0),
241:(0,2,0,3,3,2),
242:(0,0,0,8,6,0),
243:(2,1,0,5,1,2),
244:(0,1,0,11,7,0),
245:(1,1,0,0,2,2),
246:(0,0,1,1,6,2),
247:(2,1,0,6,4,0),
248:(2,0,0,1,2,0),
249:(0,2,1,4,7,1),
250:(2,1,0,9,4,1),
251:(2,0,1,6,6,2),
252:(0,0,0,2,6,2),
253:(0,1,0,3,6,2),
254:(0,1,2,0,6,1),
255:(1,0,2,1,3,1),
256:(2,0,2,2,2,1),
257:(1,1,2,3,3,2),
258:(0,1,2,4,7,2),
259:(0,0,2,5,3,2),
260:(0,0,2,6,6,1),
261:(0,1,0,6,6,2),
262:(2,1,0,1,7,1),
263:(1,1,0,3,3,1),
264:(0,0,0,0,3,2),
265:(2,1,0,8,2,0),
266:(0,1,0,2,3,1),
267:(1,1,0,5,1,2),
268:(0,1,0,9,6,3),
269:(1,0,0,1,3,2),
270:(1,0,0,0,3,1),
271:(1,1,0,1,3,2),
272:(0,2,0,1,4,1),
273:(0,0,1,3,3,2),
274:(2,1,0,3,6,0),
275:(0,0,0,12,3,2),
276:(1,1,0,1,3,2),
277:(0,1,0,3,3,1),
278:(0,0,0,0,3,0),
279:(2,1,0,2,2,1),
280:(2,1,0,2,6,0),
281:(1,1,0,12,3,3),
282:(2,0,0,6,4,1),
283:(0,1,0,2,3,2),
284:(0,2,0,4,7,3),
285:(0,1,0,11,6,1),
286:(1,1,0,1,3,2),
287:(2,1,0,6,4,0),
288:(1,0,0,2,2,1),
289:(2,1,0,12,2,1),
290:(0,1,0,0,6,1),
291:(0,0,0,3,3,2),
292:(2,2,0,8,6,1),
293:(0,0,0,0,6,2),
294:(2,2,2,1,2,2),
295:(0,2,0,12,1,1),
296:(0,0,0,3,6,0),
297:(1,1,0,10,3,1),
298:(2,0,0,0,6,2),
299:(2,1,0,0,4,0),
300:(0,1,0,2,3,0),
301:(1,0,0,0,2,0),
302:(0,1,0,0,6,2),
303:(1,0,0,9,3,1),
304:(1,1,0,5,2,1),
305:(1,1,0,8,3,0),
306:(0,0,0,6,4,1),
307:(0,2,0,4,7,1),
308:(1,1,0,12,2,3),
309:(2,1,0,6,6,1),
310:(2,1,0,0,4,1),
311:(1,0,0,1,3,1),
312:(0,0,0,2,6,1),
313:(0,1,0,2,6,1),
314:(2,1,0,5,2,4),
315:(0,1,0,3,3,1),
316:(2,1,0,13,2,1),
317:(1,1,0,0,2,2),
318:(0,0,0,1,3,2),
319:(0,0,0,4,7,2),
320:(2,0,0,8,6,2),
321:(0,1,0,9,3,0),
322:(2,0,0,3,6,1),
323:(1,0,0,6,4,2),
324:(1,1,0,12,2,1),
325:(0,1,0,1,3,2),
326:(2,0,0,3,6,2),
327:(1,0,0,4,2,2),
328:(0,1,0,9,6,3),
329:(0,1,0,2,6,2),
330:(1,2,0,4,3,2),
331:(1,1,0,3,3,1),
332:(2,1,0,3,6,1),
334:(2,1,0,12,6,4),
335:(0,0,0,13,6,1),
336:(1,2,0,10,2,0),
337:(0,0,0,0,6,2),
338:(0,1,0,10,3,1),
339:(2,0,0,10,4,1),
340:(1,1,0,4,3,0),
341:(0,1,2,2,6,2),
342:(2,2,0,3,6,2),
343:(1,1,0,0,3,3),
344:(2,0,0,0,6,1),
345:(0,0,0,6,6,1),
346:(0,1,0,8,7,2),
347:(1,0,0,2,2,1),
348:(1,1,1,4,3,2),
}
import cv2,tqdm
def readSplit(no,name,width):
    return(lambda img:[img[:,i*width:(i+1)*width]for i in range(img.shape[1]//width)])(cv2.imread(f'fgoImage/servant/{no}/{name}.png',cv2.IMREAD_UNCHANGED))
servantImg={i:(
    None,
    None,
    *[
        (lambda img:[img[:,i*width:(i+1)*width]for i in range(img.shape[1]//width)])(cv2.imread(f'fgoImage/servant/{i}/{name}.png',cv2.IMREAD_UNCHANGED))
        for name,width in(('tachie',128),)
    ],
)for i in tqdm.tqdm(servantData)}
